// Example of table
// ***
CREATE DATABASE FLOWERSHOP;

CREATE TABLE client(
    email VARCHAR(255) NOT NULL,
    client_phone VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT PK_Client PRIMARY KEY (email)
);

CREATE TABLE order(
    order_id INT NOT NULL,
    order_status ENUM('Доставлено', 'Не доставлено') NOT NULL,
    payment_status ENUM('Оплачено', 'Не оплачено') NOT NULL,
    date DATE() NOT NULL,
    order_price INT NOT NULL,
    payment_method ENUM('Картой на сайте', 'Картой при получении', 'Наличными') NOT NULL,
    production_method VARCHAR(20) NOT NULL,
    client_id INT NOT NULL, 
    CONSTRAINT PK_Order PRIMARY KEY (order_id),
    CONSTRAINT FK_Client FOREIGN KEY (client_id)
    REFERENCES client(email)
);

CREATE TABLE packaging(
    id INT NOT NULL,
    color ENUM('Красный', 'Голубой', 'Белый', 'Зеленый', 'Розовый', 'Прозрачный', 'Фиолетовый') NOT NULL,
    price INT NOT NULL,
    material ENUM('Глянцевая бумага', 'Крафтовая бумага', 'Бумага-сетка') NOT NULL,
    type ENUM('Бумага', 'Лента', 'Бумага + Лента') NOT NULL,
    CONSTRAINT PK_Packaging PRIMARY KEY (id)
);

CREATE TABLE History 
(
    Id INT IDENTITY PRIMARY KEY,
    Price INT NOT NULL,
    Operation NVARCHAR(200) NOT NULL,
    CreateAt DATETIME NOT NULL DEFAULT GETDATE(),
);

//***

// СREATING PROCEDURE

USE FLOWERSHOP;
GO
CREATE PROCEDURE ClientInfo 
BEGIN
	SELECT name AS Name, client_phone AS Phone, email AS Email
	FROM client
END;

USE FLOWERSHOP;
GO
CREATE PROCEDURE PackingInfo AS
BEGIN
	SELECT color AS Color, material AS Material, type AS Type
	FROM packaging
END;

EXEC ClientInfo // That command runs procedure

DROP PROCEDURE PackingInfo // That command drops procedure


// CREATING TRIGGER

// Inserting data

USE FLOWERSHOP
GO
CREATE TRIGGER Packing_INSERT
ON packaging
AFTER INSERT
AS
INSERT INTO History (Price, Operation)
SELECT price, 'Добавлен товар ' + id + '  , который имеет ' + color + ' цвет'
FROM INSERTED

// Deleting data

USE FLOWERSHOP
GO
CREATE TRIGGER Packing_DELETE
ON packaging
AFTER DELETE
AS
INSERT INTO History (Price, Operation)
SELECT price, 'Удален товар ' + id + '  , который имел ' + color + ' цвет'
FROM DELETED

// Updating data

USE FLOWERSHOP
GO
CREATE TRIGGER Packing_UPDATE
ON packaging
AFTER UPDATE
AS
INSERT INTO History (Price, Operation)
SELECT price, 'Обновлен товар ' + id + '  , который имеет ' + color + ' цвет'
FROM INSERTED


// CREATING VIEW

// Sample
CREATE VIEW OrdersProductsCustomers AS
SELECT Orders.CreatedAt AS OrderDate, 
        Customers.FirstName AS Customer,
        Products.ProductName As Product  
FROM Orders INNER JOIN Products ON Orders.ProductId = Products.Id
INNER JOIN Customers ON Orders.CustomerId = Customers.Id

